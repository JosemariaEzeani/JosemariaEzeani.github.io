{"version":3,"sources":["webpack:///./src/pages/budget/Plan.js"],"names":["ConnectedPlan","connect","setup","portfolio","portfolioDetails","Tools","STRUCTURE_HEADINGS","concat","STRUCTURE_ARRAY","getArray","STRUCTURE_ID","i","ii","iii","iiii","id","index","type","name","placeholder","length","details","headings","inputs"],"mappings":"2FAAA,oHAwEMA,GAxEN,UAwEsBC,aARE,SAAC,GACvB,MAAO,CAAEC,MADuC,EAAvBA,MACTC,UADgC,EAAhBA,aAQa,KAAzBF,EA1DT,SAAC,GAA0B,IAAxBE,EAAuB,EAAvBA,UAAWD,EAAY,EAAZA,MACrBE,EAAmBC,IAAkBF,EAAWG,KACpDF,EAAmB,CAAC,2BAA2BG,OAAOH,GAEtD,IA+BMI,EAAkBC,YAASC,KA/BR,SAACC,EAAGC,EAAIC,EAAKC,GAAb,MAAsB,CAC7C,kBAAC,IAAD,CACEC,GAAIL,IACJM,MAAOL,EACPM,KAAM,SACNC,KAAM,SACNC,YAAaf,IAEf,kBAAC,IAAD,CACEW,GAAIL,IACJM,MAAOJ,EACPK,KAAM,SACNC,KAAM,SACNC,YAAaf,IAEf,kBAAC,IAAD,CACEW,GAAIL,IACJM,MAAOH,EACPI,KAAM,SACNC,KAAM,QACNC,YAAa,CAAC,kCAEhB,kBAAC,IAAD,CACEJ,GAAIL,IACJM,MAAOF,EACPG,KAAM,OACNC,KAAM,OACNC,YAAa,CAACd,YAI+CH,EAAMkB,QAEvE,OACE,oCACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOH,KAAK,WAAWD,MAAO,EAAGK,QAAQ,qBACzC,sCACA,kBAAC,IAAD,CAAOC,SAAUhB,IAAoBiB,OAAQf,UAkBtCR","file":"component---src-pages-budget-plan-js-361c7b17138972784751.js","sourcesContent":["import React from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport Well from \"../../components/budget/Well\"\r\nimport Input from \"../../components/budget/Input\"\r\nimport * as Tools from \"../../models/budget/Tools\"\r\nimport Table from \"../../components/budget/Table\"\r\nimport Chart from \"../../components/budget/Chart\"\r\nimport {\r\n  getArray,\r\n  STRUCTURE_ID,\r\n  STRUCTURE_HEADINGS,\r\n} from \"../../models/budget/tables\"\r\nimport { planTypes } from \"../../types/budget/types\"\r\n\r\nconst Plan = ({ portfolio, setup }) => {\r\n  let portfolioDetails = Tools.getAccounts(portfolio, STRUCTURE_HEADINGS)\r\n  portfolioDetails = [\"Click to Select Account\"].concat(portfolioDetails)\r\n\r\n  const STRUCTURE_INPUTS = (i, ii, iii, iiii) => [\r\n    <Input\r\n      id={STRUCTURE_ID}\r\n      index={i}\r\n      type={\"select\"}\r\n      name={\"Source\"}\r\n      placeholder={portfolioDetails}\r\n    />,\r\n    <Input\r\n      id={STRUCTURE_ID}\r\n      index={ii}\r\n      type={\"select\"}\r\n      name={\"Target\"}\r\n      placeholder={portfolioDetails}\r\n    />,\r\n    <Input\r\n      id={STRUCTURE_ID}\r\n      index={iii}\r\n      type={\"number\"}\r\n      name={\"Value\"}\r\n      placeholder={[\"Opening Balance Contribution\"]}\r\n    />,\r\n    <Input\r\n      id={STRUCTURE_ID}\r\n      index={iiii}\r\n      type={\"date\"}\r\n      name={\"Date\"}\r\n      placeholder={[Tools.getDate()]}\r\n    />,\r\n  ]\r\n\r\n  const STRUCTURE_ARRAY = getArray(STRUCTURE_ID, STRUCTURE_INPUTS, setup.length)\r\n\r\n  return (\r\n    <>\r\n      <Well>\r\n        <Chart type=\"accounts\" index={0} details=\"Accounts Balance\" />\r\n        <h4>SetUp:</h4>\r\n        <Table headings={STRUCTURE_HEADINGS} inputs={STRUCTURE_ARRAY} />\r\n      </Well>\r\n    </>\r\n  )\r\n}\r\n\r\nPlan.propTypes = planTypes\r\n\r\nconst mapStateToProps = ({ setup, portfolio }) => {\r\n  return { setup, portfolio }\r\n}\r\n// const mapDispatchToProps = dispatch => {\r\n//   return { clear: text => dispatch(resizeSession(text)) }\r\n// }\r\n\r\n// const ConnectedPlan = connect(mapStateToProps, mapDispatchToProps)(Plan)\r\nconst ConnectedPlan = connect(mapStateToProps, null)(Plan)\r\n\r\nexport default ConnectedPlan\r\n"],"sourceRoot":""}