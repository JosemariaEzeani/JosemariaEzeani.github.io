{"version":3,"sources":["utils/Emoji.js","components/PengCutz.js","components/Header.js","components/Content.js","components/Time.js","components/Tags.js","layouts/Post.js","components/Button.js","layouts/BusinessPage.js","layouts/TechnologyPage.js","layouts/PublicationsPage.js","layouts/ReadMePage.js","components/NavBar.js","utils/Router.js","containers/App.js","serviceWorker.js","index.js"],"names":["Emoji","props","react_default","a","createElement","className","role","aria-label","label","emoji","PengCutz","Emoji_Emoji","Header","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","header","returnHeader","Component","Content","content","container","body","src","html","list","formatedPost","map","section","HEADER","BODY","Fragment","push","concat","SRC","alt","HTML","offset","formattedTable","row","rKey","colspan","rowspan","formattedRows","CONTENT","column","cKey","formattedColumn","colSpan","rowSpan","startTable","slice","endTable","LIST","formattedList","item","lKey","returnContent","Time","date","time","Date","timeElapsed","getTime","Math","pow","round","elapsedTime","Tags","tags","postObject","element","returnTags","Post","Header_Header","post","Content_Content","Time_Time","DATE","Tags_Tags","TAGS","Button","_this","call","doSomething","bind","assertThisInitialized","console","log","children","onClick","boolean","BusinessPage","state","postVal","posts","length","handleClick","next","maxVal","setState","Post_Post","Button_Button","TechnologyPage","PublicationsPage","ReadMePage","NavBar","Link","to","Router","BrowserRouter","NavBar_NavBar","Route","path","exact","component","App","PengCutz_PengCutz","Router_Router","Boolean","window","location","hostname","match","ReactDOM","render","src_containers_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.452a4540.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Emoji.scss\";\r\n\r\nexport const Emoji = (props) => (\r\n    <span className = \"emoji\" role = \"img\" aria-label = {props.label}>{props.emoji}</span>\r\n);","import React from \"react\";\r\nimport {Emoji} from \"../utils/Emoji\";\r\nimport \"./PengCutz.scss\";\r\n\r\nexport const PengCutz = () => (\r\n    <h1 className = \"logo\"><Emoji label = \"scissors\" emoji = \"✂️\"/> PengCutz</h1>\r\n);","import React, {Component} from \"react\"; \r\nimport \"./Header.scss\";\r\n\r\nexport class Header extends Component {\r\n    returnHeader(header){\r\n        return <h1 className = \"header\">{header}</h1>\r\n}\r\n\r\nrender() {\r\n    return this.returnHeader(this.props.header);\r\n}\r\n}","import React, {Component} from \"react\"; \r\nimport \"./Content.scss\";\r\n\r\nexport class Content extends Component {\r\n\r\n    returnContent(content){\r\n        let container, header, body, src, html, list;\r\n        const formatedPost = content.map((section, key) => {\r\n            let content = [];\r\n            if (((header = section.HEADER) !== null) && \r\n                ((body = section.BODY) !== null)) {\r\n                container = (<>\r\n                    <h2 className = \"subheading\">{header}</h2>\r\n                    <p className = \"mainParagraph\">{body}</p>\r\n                </>);\r\n                content.push(<div key = {`${key}A`}>\r\n                    {container}\r\n                </div>);\r\n            } else if ((body = section.HEADER) !== null) {\r\n                container = <h2 className = \"subheading\">{header}</h2>;\r\n                content.push(<div key = {`${key}B`}>\r\n                    {container}\r\n                </div>);\r\n            } else if ((body = section.BODY) !== null) {\r\n                container = <p className = \"mainParagraph\">{body}</p>;\r\n                content.push(<div key = {`${key}C`}>\r\n                    {container}\r\n                </div>);\r\n            }\r\n    \r\n            if ((src = section.SRC) !== null) {\r\n                container = (<img src = {src} alt = \"pretty-banner\">{header}</img>);\r\n                content.push(<div key = {`${key}D`}>\r\n                    {container}\r\n                </div>);\r\n            }\r\n\r\n            if ((html = section.HTML) !== null) {\r\n                let offset = 0;\r\n                const formattedTable = html.map((row, rKey) => {\r\n                    let header, body, colspan, rowspan;\r\n                    const formattedRows= row.CONTENT.map((column, cKey) => {\r\n                        let formattedColumn;\r\n                        colspan = (column.colspan !== null)? column.colspan : 1;\r\n                        rowspan = (column.rowspan !== null)? column.rowspan : 1;\r\n                        if ((header = column.HEADER) !== null) {\r\n                            offset = (rowspan > offset) ? (rowspan - 1) : offset;\r\n                            formattedColumn = <th colSpan = {colspan} rowSpan = {rowspan} key = {cKey}><h2 className = \"tHeader\">{header}</h2></th>;\r\n                        } else if ((body = column.BODY) !== null) {\r\n                            formattedColumn = <td colSpan = {colspan} rowSpan = {rowspan} key = {cKey}><p className = \"tParagraph\">{body}</p></td>;\r\n                        }\r\n                        return formattedColumn;\r\n                    });\r\n                    \r\n                    return <tr key = {rKey}>{formattedRows}</tr>;\r\n                });\r\n\r\n                const startTable = [<thead key = {1}>{formattedTable.slice(0, offset+1)}</thead>];\r\n                const endTable = [<tbody key = {2}>{formattedTable.slice(offset+1)}</tbody>];\r\n                container = <table>{startTable.concat(endTable)}</table>;\r\n                content.push(<div className = \"table\" key = {`${key}E`}>\r\n                    {container}\r\n                </div>);\r\n            }\r\n\r\n            if ((list = section.LIST) !== null) {\r\n                const formattedList = list.map((item, lKey) => (\r\n                    <li key = {lKey}><p className = \"lParagraph\"><b>{(item.HEADER + \" \")}</b>{item.BODY}</p></li>));\r\n\r\n                container = <ul>{formattedList}</ul>;\r\n\r\n                content.push(<div className = \"list\" key = {`${key}F`}>\r\n                    {container}\r\n                </div>);\r\n            }\r\n\r\n            return content;\r\n    });\r\n\r\n    return <div className = \"content\">{formatedPost}</div>;\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        return this.returnContent(this.props.content);\r\n    }\r\n    \r\n}","import React, {Component} from \"react\"; \r\nimport \"./Time.scss\"\r\n\r\nexport class Time extends Component {\r\n    \r\n    elapsedTime(date){\r\n        const time = new Date (date);\r\n        const currentTime = new Date();\r\n        let timeElapsed = currentTime.getTime() - time.getTime();\r\n        timeElapsed *= 10 ** -3;\r\n        timeElapsed /= (60 * 60 * 24);\r\n        timeElapsed = Math.round(timeElapsed);\r\n        return <h1 className = \"time\">{`Posted ${timeElapsed} days ago.`}</h1>;\r\n    }\r\n\r\n    render(){\r\n        return this.elapsedTime(this.props.date);\r\n    }\r\n}","import React, {Component} from \"react\"; \r\nimport \"./Tags.scss\"\r\n\r\nexport class Tags extends Component {\r\n    returnTags(tags){\r\n        const postObject = tags.map((element, key) => (\r\n                <p className = \"tag\" key = {key}>{`#${element}`}</p>));\r\n            return <div className = \"tagContainer\">{postObject}</div>;\r\n    }\r\n\r\n    render(){\r\n        return this.returnTags(this.props.tags);\r\n    }\r\n}","import React  from \"react\";\r\nimport {Header} from \"../components/Header\";\r\nimport {Content} from \"../components/Content\";\r\nimport {Time} from \"../components/Time\";\r\nimport {Tags} from \"../components/Tags\";\r\n\r\nexport const Post = (props) => (\r\n    <div>\r\n        <Header header = {props.post.HEADER}/>\r\n        <Content content = {props.post.BODY}/>\r\n        <Time date = {props.post.DATE}/>\r\n        <Tags tags = {props.post.TAGS}/>\r\n    </div>\r\n);","import React, {Component} from \"react\";\r\nimport \"./Button.scss\";\r\n\r\nexport class Button extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.doSomething = this.doSomething.bind(this);\r\n    }\r\n    doSomething(){\r\n        (console.log(this.props.children));\r\n        this.props.onClick(this.props.boolean);\r\n    }\r\n\r\n    render(){\r\n\r\n        return <button onClick = {this.doSomething}>{this.props.children}</button>;\r\n    }\r\n\r\n}","import React, { Component } from \"react\";\r\nimport { Emoji } from \"../utils/Emoji\";\r\nimport posts from \"../files/HomePosts.json\";\r\nimport { Post } from \"./Post\";\r\nimport { Button } from \"../components/Button\";\r\nimport \"./BusinessPage.scss\";\r\n\r\nexport class BusinessPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            postVal: posts.length -1\r\n        };\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    handleClick(next){\r\n        const minVal = 0;\r\n        const maxVal = posts.length - 1;\r\n        let value = this.state.postVal;\r\n        if ((next === true) && (value === maxVal)) {\r\n            this.setState({postVal: minVal});\r\n        } else if ((next === true) && (value < maxVal)) {\r\n            this.setState({postVal: ++value});\r\n        } else if ((next === false) && (value === minVal)) {\r\n            this.setState({postVal: maxVal});\r\n        } else if ((next === false) && (value > minVal)) {\r\n            this.setState({postVal: --value});\r\n        }\r\n    }\r\n\r\n    render() { \r\n        return (<div className = \"BusinessPage\">\r\n            <h1 ><Emoji label = \"newspaper\" emoji = \"📰\"/> Thoughts on Business</h1>\r\n            <Post post = {posts[this.state.postVal]}/>\r\n            <div>\r\n            <Button className = \"leftButton\" boolean = {false} onClick = {this.handleClick}><Emoji label = \"left\" emoji = \"🢪\"/> Previous Post</Button>\r\n            <Button className = \"rightButton\" boolean = {true} onClick = {this.handleClick}>Next Post <Emoji label = \"left\" emoji = \"🢫\"/></Button>\r\n            </div>\r\n            </div>);\r\n    }\r\n}","import React from \"react\";\r\nimport {Emoji} from \"../utils/Emoji\";\r\n\r\nexport const TechnologyPage = () => <h2><Emoji label = \"backpack\" emoji = \"🎒\"/> Thoughts on Technology</h2>;","import React from \"react\";\r\nimport {Emoji} from \"../utils/Emoji\";\r\n\r\nexport const PublicationsPage = () => <h2><Emoji label = \"books\" emoji = \"📚\"/> Publications</h2>;","import React from \"react\";\r\nimport {Emoji} from \"../utils/Emoji\";\r\n\r\nexport const ReadMePage = () => <h2><Emoji label = \"open book\" emoji = \"📖\"/> ReadMe</h2>;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./NavBar.scss\";\r\n\r\nexport const NavBar = () => (\r\n    <div className = \"navigation\">\r\n        <h1>\r\n            <Link to = \"/\">Home</Link>\r\n        </h1>\r\n        <h1>\r\n            <Link to = \"/technology\">Technology</Link>\r\n        </h1>\r\n        <h1>\r\n            <Link to = \"/publications\">Publications</Link>\r\n        </h1>\r\n        <h1>\r\n            <Link to = \"/readme\">ReadMe</Link>\r\n        </h1>\r\n    </div>\r\n);","import React from \"react\";\r\nimport { BusinessPage } from \"../layouts/BusinessPage\";\r\nimport { TechnologyPage } from \"../layouts/TechnologyPage\";\r\nimport { PublicationsPage } from \"../layouts/PublicationsPage\";\r\nimport { ReadMePage } from \"../layouts/ReadMePage\";\r\nimport { NavBar } from \"../components/NavBar\";\r\nimport { BrowserRouter, Route} from \"react-router-dom\";\r\nimport \"./Router.scss\";\r\n\r\nexport const Router = () => (\r\n    <BrowserRouter>\r\n        <div className = \"Router\">\r\n            <NavBar/>\r\n            <Route path = \"/\" exact component = { BusinessPage } />\r\n            <Route path = \"/technology/\" component = { TechnologyPage } />\r\n            <Route path = \"/publications/\" component = { PublicationsPage } />\r\n            <Route path = \"/readme/\" component = { ReadMePage } />\r\n        </div>\r\n    </BrowserRouter>\r\n);","import React, { Component } from 'react';\nimport { PengCutz } from \"../components/PengCutz\";\nimport { Router } from \"../utils/Router\";\nimport './App.scss';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <PengCutz/>\n        <Router/>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}